--PARA CORRER ESTA QUERY SOLAMENTE ES NECESARIO MODIFICAR LAS SIGUIENTES FECHAS SEGUN LA NECESIDAD
DECLARE FECHA_MES DATE DEFAULT '2022-07-01'
;

--INGRESAR LOS SITES A CONSULTAR
DECLARE VAR_SITES ARRAY <STRING>;
SET VAR_SITES = ['MLC']
;

/*//////////////////////////////////////////////////////
1) COMIENZO METRICA LIVE LISTING POR PROPERTY CODE
//////////////////////////////////////////////////////*/
WITH LIVE_LISTINGS_1 AS

(

SELECT 
    I.SIT_SITE_ID
  -- , DATE_TRUNC(I.TIM_DAY,MONTH) AS PERIODO
  , PROPERTY_CODE
  , I.TIM_DAY

FROM `meli-bi-data.WHOWNER.BT_LIVE_LISTINGS_CLASSIFIEDS` AS I

LEFT JOIN `meli-bi-data.SBOX_CLASSI_PLANNING.LK_ATRIBUTOS_IMRE` AS RE 
ON RE.ITE_ITEM_ID=I.ITE_ITEM_ID 
AND RE.SIT_SITE_ID=I.SIT_SITE_ID 
AND I.MKT_MARKETPLACE_ID='IMRE'


WHERE DATE_TRUNC(TIM_DAY,MONTH) >= FECHA_MES
AND I.ITE_ITEM_STATUS IN  ('A','active')
AND I.MKT_MARKETPLACE_ID IN  ('IMRE') -- ('IMRE','IMM')
AND RE.USER_TYPE IN ('Inmobiliaria') -- (im.user_type in ('Concesionario') or re.user_type in ('Inmobiliaria'))
AND RE.SUB_VERTICAL = 'Desarrollos'
AND I.SIT_SITE_ID IN UNNEST(VAR_SITES)

)

, LIVE_LISTINGS_FINAL AS
(
SELECT DISTINCT
    SIT_SITE_ID
  -- , PERIODO
  , PROPERTY_CODE

  -- COMIENZO WINDOW FUNCITON
    -- PROPERTY ACTIVA POR DIA
  , COUNT(DISTINCT CONCAT(PROPERTY_CODE,TIM_DAY)) OVER 
  (PARTITION BY 
      SIT_SITE_ID
    -- , PERIODO
    , PROPERTY_CODE
  ) AS PROPERTY_DIAS_ACTIVOS -- PARTITION SEGUN GROUP BY DE LO QUE QUIERAS TRAERT
  
    -- CANTIDAD DE DIAS DEL PERIODO
  , MAX(TIM_DAY) OVER (PARTITION BY SIT_SITE_ID/*,PERIODO*/) AS MAX_DATE_IN_THE_PERIOD
  , MIN(TIM_DAY) OVER (PARTITION BY SIT_SITE_ID/*,PERIODO*/) AS MIN_DATE_IN_THE_PERIOD

    -- LIVE LISTINGS MENSUAL:
  , COUNT(DISTINCT CONCAT(PROPERTY_CODE,TIM_DAY)) OVER 
  (PARTITION BY 
      SIT_SITE_ID
    -- , PERIODO
    , PROPERTY_CODE
  ) / ( DATE_DIFF(MAX(TIM_DAY) OVER (PARTITION BY SIT_SITE_ID/*,PERIODO*/),MIN(TIM_DAY) OVER (PARTITION BY SIT_SITE_ID/*,PERIODO*/),DAY)+1 ) AS LIVE_LISTINGS

FROM LIVE_LISTINGS_1
)

/*//////////////////////////////////////////////////////
2) CONTACTOS
//////////////////////////////////////////////////////*/
, CONTACTOS_FINAL AS
(
SELECT
  A1.SIT_SITE_ID   
, RE.PROPERTY_CODE
, SUM(_CALL+WHATSAPP+PREGUNTAS_UNICOS+QUOTATIONS_UNICOS+ENTREGAS+PRESUPUESTOS) AS CONTACTOS_TOTALES_UNICOS
, SUM(_CALL+WHATSAPP+PREGUNTAS_TOTALES+QUOTATIONS_TOTALES+ENTREGAS+PRESUPUESTOS) AS CONTACTOS_TOTALES
, SUM(VISITAS_TOTAL) AS VISITAS

FROM `meli-bi-data.SBOX_CLASSI_PLANNING.BT_VIBRANCY_TOTAL_SITES` AS A1

LEFT JOIN `meli-bi-data.SBOX_CLASSI_PLANNING.LK_ATRIBUTOS_IMRE` AS RE 
ON RE.ITE_ITEM_ID=A1.ITE_ITEM_ID 
AND RE.SIT_SITE_ID=A1.SIT_SITE_ID 
AND A1.VERTICAL='Real Estate'

LEFT JOIN `meli-bi-data.WHOWNER.AG_LK_CAT_CATEGORIES` AS CAT
ON CAST(A1.CAT_CATEG_ID_L7 AS NUMERIC) = CAT.CAT_CATEG_ID_L7
AND A1.SIT_SITE_ID = CAT.SIT_SITE_ID


WHERE DATE_TRUNC(FECHA,MONTH) >= FECHA_MES
AND A1.VERTICAL  IN ('Real Estate') -- in ('Real Estate','Motors')
AND RE.USER_TYPE IN ('Inmobiliaria') -- (im.user_type in ('Concesionario') or re.user_type in ('Inmobiliaria'))
AND RE.SUB_VERTICAL = 'Desarrollos'

AND A1.SIT_SITE_ID IN UNNEST(VAR_SITES)
AND FRAUDE = 'N/A'

GROUP BY 1,2
)

/*//////////////////////////////////////////////////////
3) ATRIBUTOS
//////////////////////////////////////////////////////*/
  -- TRAIGO PRECIO MIN Y MAX, COMBO Y UBICACION DE ITEMS
, ATRIBUTOS_1 AS
(
  SELECT 
      A.SIT_SITE_ID
    , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'PROPERTY_CODE') AS PROPERTY_CODE
    , A.ITE_ITEM_ID
    , RE.ESTADO
    , RE.CIUDAD
    , RE.BARRIO_COMUNA
    , RE.LATITUD
    , RE.LONGITUD
    , RE.TIER
    , RE.COMBO
    , SIT_CURRENCY_ID
    , (SELECT MIN(ITE_ITEM_VARIATIONS.PRICE) FROM UNNEST(A.ITE_ITEM_VARIATIONS) AS ITE_ITEM_VARIATIONS WHERE ITE_ITEM_VARIATIONS.PRICE IS NOT NULL) AS MIN_PRICE
    , (SELECT MAX(ITE_ITEM_VARIATIONS.PRICE) FROM UNNEST(A.ITE_ITEM_VARIATIONS) AS ITE_ITEM_VARIATIONS WHERE ITE_ITEM_VARIATIONS.PRICE IS NOT NULL) AS MAX_PRICE
    , (SELECT AVG(ITE_ITEM_VARIATIONS.PRICE) FROM UNNEST(A.ITE_ITEM_VARIATIONS) AS ITE_ITEM_VARIATIONS WHERE ITE_ITEM_VARIATIONS.PRICE IS NOT NULL) AS AVG_PRICE
    , (SELECT MAX(ITE_ITEM_ATTRIBUTES.VALUE_NAME) FROM UNNEST(A.ITE_ITEM_ATTRIBUTES) AS ITE_ITEM_ATTRIBUTES WHERE ITE_ITEM_ATTRIBUTES.ID = 'CANONICAL_URL') AS CANONICAL_URL
    , (CASE WHEN (IS_TEST IS FALSE AND ITE_ITEM_ACTIVED_FLG IS TRUE AND ITE_ITEM_STATUS = 'active') THEN 'Activo' ELSE 'No activo' END) AS ACTIVE_YESTERDAY

  FROM `meli-bi-data.WHOWNER.LK_ITE_ITEMS` AS A

  LEFT JOIN `meli-bi-data.SBOX_CLASSI_PLANNING.LK_ATRIBUTOS_IMRE` AS RE 
  ON RE.ITE_ITEM_ID=A.ITE_ITEM_ID 
  AND RE.SIT_SITE_ID=A.SIT_SITE_ID 

  WHERE RE.SIT_SITE_ID IN UNNEST(VAR_SITES)
    AND RE.USER_TYPE IN ('Inmobiliaria') -- (im.user_type in ('Concesionario') or re.user_type in ('Inmobiliaria'))
    AND RE.SUB_VERTICAL = 'Desarrollos'
)

  -- HAGO UN QUALIFY PARA TRAER SOLO EL ULTIMO ITEM ID POR CADA PROPERTY QUE EXISTA
, ATRIBUTOS_FINAL AS
(
SELECT A.*

FROM ATRIBUTOS_1 AS A

QUALIFY ROW_NUMBER() OVER (PARTITION BY SIT_SITE_ID, PROPERTY_CODE ORDER BY ITE_ITEM_ID DESC) = 1
)

/*//////////////////////////////////////////////////////
4) FACTURACION/REVENUE
//////////////////////////////////////////////////////*/
, REVENUE_TOTAL AS
(
SELECT DISTINCT
  Id_portal
, (CASE WHEN Id_de_Proyecto = '0' THEN NULL ELSE Id_de_Proyecto END) AS Id_de_Proyecto
, SUM(CAST(Monto_Neto_CLP AS NUMERIC)) OVER(PARTITION BY Id_portal,Id_de_Proyecto) AS MONTO_NETO_TOTAL_PROPERTY_ID_CLP -- FACTURACION POR PROYECT ID
, SUM(CAST(Monto_Neto_CLP AS NUMERIC)) OVER(PARTITION BY Id_portal) AS MONTO_NETO_TOTAL_PORTAL_ID_CLP -- FACTURACION POR PORTAL ID


, SUM(CAST(Monto_Neto_UF AS NUMERIC))  OVER(PARTITION BY Id_portal,Id_de_Proyecto) AS MONTO_NETO_TOTAL_PROPERTY_ID_UF -- FACTURACION POR PROYECT ID
, SUM(CAST(Monto_Neto_UF AS NUMERIC))  OVER(PARTITION BY Id_portal) AS MONTO_NETO_TOTAL_PORTAL_ID_UF -- FACTURACION POR PORTAL ID

, COUNT(DISTINCT (CASE WHEN Id_de_Proyecto = '0' THEN NULL ELSE Id_de_Proyecto END)) OVER(PARTITION BY Id_portal) AS CANTIDAD_PROPERTY_IDS_TOTAL -- CANTIDAD DE PROPERTY ID DENTRO DEL PORTAL ID

, SAFE_DIVIDE(SUM(CAST(Monto_Neto_CLP AS NUMERIC)) OVER(PARTITION BY Id_portal), COUNT(DISTINCT Id_de_Proyecto) OVER(PARTITION BY Id_portal)) AS REVENUE_TOTAL_CLP -- EL QUE PIDIO GIAN

, SAFE_DIVIDE(SUM(CAST(Monto_Neto_UF AS NUMERIC))  OVER(PARTITION BY Id_portal), COUNT(DISTINCT Id_de_Proyecto) OVER(PARTITION BY Id_portal)) AS REVENUE_TOTAL_UF -- EL QUE PIDIO GIAN


FROM `meli-bi-data.SBOX_MKTVIS.MLC_IMRE_DESARROLLOS_FACTURACION`

WHERE Mes = '2022-11-01'
)

, REVENUE_PLANES AS
(
SELECT DISTINCT
  Id_portal
, (CASE WHEN Id_de_Proyecto = '0' THEN NULL ELSE Id_de_Proyecto END) AS Id_de_Proyecto
, SUM(CAST(Monto_Neto_CLP AS NUMERIC)) OVER(PARTITION BY Id_portal,Id_de_Proyecto) AS MONTO_NETO_PLANES_PROPERTY_ID_CLP -- FACTURACION POR PROYECT ID
, SUM(CAST(Monto_Neto_CLP AS NUMERIC)) OVER(PARTITION BY Id_portal) AS MONTO_NETO_PLANES_PORTAL_ID_CLP -- FACTURACION POR PORTAL ID


, SUM(CAST(Monto_Neto_UF AS NUMERIC))  OVER(PARTITION BY Id_portal,Id_de_Proyecto) AS MONTO_NETO_PLANES_PROPERTY_ID_UF -- FACTURACION POR PROYECT ID
, SUM(CAST(Monto_Neto_UF AS NUMERIC))  OVER(PARTITION BY Id_portal) AS MONTO_NETO_PLANES_PORTAL_ID_UF -- FACTURACION POR PORTAL ID

, COUNT(DISTINCT (CASE WHEN Id_de_Proyecto = '0' THEN NULL ELSE Id_de_Proyecto END)) OVER(PARTITION BY Id_portal) AS CANTIDAD_PROPERTY_IDS_PLANES -- CANTIDAD DE PROPERTY ID DENTRO DEL PORTAL ID

, SAFE_DIVIDE(SUM(CAST(Monto_Neto_CLP AS NUMERIC)) OVER(PARTITION BY Id_portal), COUNT(DISTINCT Id_de_Proyecto) OVER(PARTITION BY Id_portal)) AS REVENUE_PLANES_CLP -- EL QUE CONVENDRIA A POM

, SAFE_DIVIDE(SUM(CAST(Monto_Neto_UF AS NUMERIC))  OVER(PARTITION BY Id_portal), COUNT(DISTINCT Id_de_Proyecto) OVER(PARTITION BY Id_portal)) AS REVENUE_PLANES_UF -- EL QUE CONVENDRIA A POM



FROM `meli-bi-data.SBOX_MKTVIS.MLC_IMRE_DESARROLLOS_FACTURACION`

WHERE Mes = '2022-11-01'
AND Familia_de_productos IN ('Plan de Publicación Proyecto','Plan de Publicación Corredor')
)

, REVENUE_FINAL AS
(
SELECT A.*, B.* EXCEPT(Id_portal, Id_de_Proyecto)

FROM REVENUE_TOTAL AS A

LEFT JOIN REVENUE_PLANES AS B
ON A.Id_portal = B.Id_portal
AND A.Id_de_Proyecto = B.Id_de_Proyecto
)

/*//////////////////////////////////////////////////////
5) UNIFICO 1,2,3 Y 4
//////////////////////////////////////////////////////*/

, UNIFICACION AS

(
SELECT 
  D.Id_portal
, D.REVENUE_TOTAL_CLP
, D.REVENUE_TOTAL_UF
, D.REVENUE_PLANES_CLP
, D.REVENUE_PLANES_UF
, A.*
, B.* EXCEPT(SIT_SITE_ID,PROPERTY_CODE)
, SAFE_MULTIPLY( SAFE_DIVIDE(CONTACTOS_TOTALES_UNICOS,PROPERTY_DIAS_ACTIVOS) , 30) AS LEADS_MENSUALIZADO
, C.* EXCEPT(SIT_SITE_ID,PROPERTY_CODE)


FROM LIVE_LISTINGS_FINAL AS A

LEFT JOIN CONTACTOS_FINAL AS B
ON A.SIT_SITE_ID = B.SIT_SITE_ID
AND A.PROPERTY_CODE = B.PROPERTY_CODE

LEFT JOIN ATRIBUTOS_FINAL AS C
ON A.SIT_SITE_ID = C.SIT_SITE_ID
AND A.PROPERTY_CODE = C.PROPERTY_CODE

LEFT JOIN REVENUE_FINAL AS D
ON A.PROPERTY_CODE = D.Id_de_Proyecto
)

/*//////////////////////////////////////////////////////
CREO COLUMNAS DE PERCENTILES
//////////////////////////////////////////////////////*/

SELECT *

FROM UNIFICACION
